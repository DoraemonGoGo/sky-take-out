<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.SetmealMapper">

    <insert id="insert" parameterType="Setmeal" useGeneratedKeys="true" keyProperty="id">
        insert into setmeal (name, price, category_id, image, description, status, create_time, update_time, create_user, update_user)
        values (#{name}, #{price}, #{categoryId}, #{image}, #{description}, #{status}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser})
    </insert>

    <select id="pageQuery" resultType="com.sky.vo.SetmealVO">
        select s.*, c.name as categoryName from setmeal s left join category c on s.category_id = c.id
        <where>
            <if test="name != null">
                and s.name like concat('%', #{name}, '%')
            </if>
            <if test="categoryId != null">
                and s.category_id = #{categoryId}
            </if>
            <if test="status != null">
                and s.status = #{status}
            </if>
        </where>
        order by s.create_time desc
    </select>

    <select id="getById" resultType="com.sky.entity.Setmeal">
        select * from setmeal where id = #{id}
    </select>

    <delete id="deleteById">
        delete from setmeal where id = #{id}
    </delete>

    <update id="update">
        update setmeal
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
            <if test="image != null">
                image = #{image},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            update_time = #{updateTime},
            update_user = #{updateUser}
        </set>
        where id = #{id}
    </update>
</mapper>